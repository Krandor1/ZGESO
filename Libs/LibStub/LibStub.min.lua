local a,b="LibStub",7;local c=_G[a]local e=string.format;if not c or c.minor<b then c=c or{libs={},minors={}}_G[a]=c;c.minor=b;local f;local g={Warn=function()end}local function h()if not f and LibDebugLogger then f=LibDebugLogger(a)end;if not f then return g end;return f end;local i=c.warning or{first=true,canShow=false,showLater=false}c.warning=i;local function j(k,l)if not l and(i.first or i.showLater)then i.first=false;if i.canShow then i.showLater=false;EVENT_MANAGER:UnregisterForEvent(a,EVENT_PLAYER_ACTIVATED)if not(LibStubData and LibStubData.disableDeprecationMessage)then d("[LibStub] Warning: LibStub is deprecated, but has been called by one or more addons. See LibDebugLogger output and addon description for more information. You can disable this message by using the /libstubwarning command.")end else i.showLater=true end end;if not k then h():Warn("Don't call me.")end end;EVENT_MANAGER:RegisterForEvent(a,EVENT_PLAYER_ACTIVATED,function()i.canShow=true;if i.showLater then j(true)end end)SLASH_COMMANDS["/libstubwarning"]=function(m)local n=LibStubData or{disableDeprecationMessage=false}LibStubData=n;if m=="on"then n.disableDeprecationMessage=false;d("[LibStub] Deprecation chat message is now turned on.")elseif m=="off"then n.disableDeprecationMessage=true;d("[LibStub] Deprecation chat message is now turned off.")else df("[LibStub] Deprecation chat message is currently turned %s. Usa '/libstubwarning %s' to change",n.disableDeprecationMessage==true and"off"or"on",n.disableDeprecationMessage==true and"on"or"off")end end;function c:NewLibrary(o,p)assert(type(o)=="string","Bad argument #2 to `NewLibrary' (string expected)")if type(p)~="number"then p=assert(tonumber(zo_strmatch(p,"%d+%.?%d*")),"Minor version must either be a number or contain a number.")end;local q=self.minors[o]if q and q>=p then return nil end;self.minors[o],self.libs[o]=p,self.libs[o]or{}return self.libs[o],q end;function c:GetLibrary(o,r)j(not LibDebugLogger)if not self.libs[o]and not r then error(e("Cannot find a library instance of %q.",tostring(o)),2)end;return self.libs[o],self.minors[o]end;function c:IterateLibraries()j(not LibDebugLogger)return pairs(self.libs)end;setmetatable(c,{__call=c.GetLibrary})end;c.SILENT=true