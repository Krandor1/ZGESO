local a,b="LibStub",5;local c=_G[a]local d=string.format;if not c or c.minor<b then c=c or{libs={},minors={}}_G[a]=c;c.minor=b;function c:NewLibrary(e,f)assert(type(e)=="string","Bad argument #2 to `NewLibrary' (string expected)")if type(f)~="number"then f=assert(tonumber(zo_strmatch(f,"%d+%.?%d*")),"Minor version must either be a number or contain a number.")end;local g=self.minors[e]if g and g>=f then return nil end;self.minors[e],self.libs[e]=f,self.libs[e]or{}return self.libs[e],g end;function c:GetLibrary(e,h)if not self.libs[e]and not h then error(d("Cannot find a library instance of %q.",tostring(e)),2)end;return self.libs[e],self.minors[e]end;function c:IterateLibraries()return pairs(self.libs)end;setmetatable(c,{__call=c.GetLibrary})end;c.SILENT=true