local a="LibGPS2"local b;if not LibStub then b={}else b=LibStub:NewLibrary(a,21)if not b then return end end;local c=LibMapPing;if not c then error(string.format("[%s] Cannot load without LibMapPing",a))end;a="LibGPS"local d=a.."DummyPin"local e=a.."_Finalize"b.LIB_EVENT_STATE_CHANGED="OnLibGPS2MeasurementChanged"local f="Warning"local g="Notice"local h="Debug"local i=1;local j=b.rootMaps or{}b.rootMaps=j;b.mapMeasurements=b.mapMeasurements or{}local k=b.mapMeasurements;b.mapStack=b.mapStack or{}local l=b.mapStack;b.suppressCount=b.suppressCount or 0;local MAP_PIN_TYPE_PLAYER_WAYPOINT=MAP_PIN_TYPE_PLAYER_WAYPOINT;local m,n,o=0,0,nil;local p=false;local q=nil;local r=nil;local s=nil;local t=nil;local u={}local v=false;SLASH_COMMANDS["/libgpsdebug"]=function(w)b.debugMode=tonumber(w)==1;df("[%s] debug mode %s",a,b.debugMode and"enabled"or"disabled")end;local function x(y,z,...)if not b.debugMode then return end;df("[%s] %s: %s",a,y,zo_strjoin(" ",z,...))end;local function A()return string.match(debug.traceback("",2),"user:/AddOns/(.+)")end;local function B()EVENT_MANAGER:UnregisterForUpdate(e)while b.suppressCount>0 do c:UnsuppressPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)b.suppressCount=b.suppressCount-1 end;if p then x(h,"Update waypoint pin",c:GetMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT))c:RefreshMapPin(MAP_PIN_TYPE_PLAYER_WAYPOINT)p=false end;v=false;CALLBACK_MANAGER:FireCallbacks(b.LIB_EVENT_STATE_CHANGED,v)end;local function C(D,E,F,G,H)if not H or D~=MAP_PIN_TYPE_PLAYER_WAYPOINT or not v then return end;EVENT_MANAGER:UnregisterForUpdate(e)EVENT_MANAGER:RegisterForUpdate(e,0,B)end;local function I()return GetMapPlayerPosition("player")end;local function J()return c:GetMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)end;local function K()m,n,o=0,0,nil end;local function L()if not o then x(h,"Called RestoreCurrentWaypoint without stored waypoint.")return end;local M=false;if m~=0 or n~=0 then M=SetPlayerWaypointByWorldLocation(m,1,n)if not M then x(h,"Cannot reset waypoint")end end;if M then x(h,"Waypoint was restored, request pin update")p=true else RemovePlayerWaypoint()end;K()end;local function N(O,P)local Q=c:HasMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)if Q then m,n=J()o=GetMapTileTexture()end;b.suppressCount=b.suppressCount+1;c:SuppressPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)local R,S,T,U=GetUnitWorldPosition("player")local F,G=1,1;if math.abs(S-F)<10000 then F=S+10000 end;if math.abs(U-G)<10000 then G=U+10000 end;if not SetPlayerWaypointByWorldLocation(F,T,G)then x(f,"Cannot set reference waypoint")K()return 0,0,false end;local V,W=J()local X,Y=F-S,G-U;local Z,_=V-O,W-P;local a0=math.sqrt((X*X+Y*Y)/(Z*Z+_*_))if Q then m,n=(m-O)*a0+S,(n-P)*a0+U end;return V,W,Q end;local function RemovePlayerWaypoint()c:RemoveMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)end;local function a1()local a2,a3=I()local a4,a5=J()return a2,a3,a4,a5 end;local function a6(a7)return k[a7 or GetMapTileTexture()]~=nil end;local function a8()if q(i)~=SET_MAP_RESULT_FAILED then local a9={scaleX=1,scaleY=1,offsetX=0,offsetY=0,mapIndex=i,zoneIndex=GetCurrentMapZoneIndex()}k[GetMapTileTexture()]=a9;j[i]=a9;return true end;return false end;local function aa(a7,O,P)local V,W,Q=N(O,P)local ab={}b.measurementPositions=ab;table.insert(ab,{mapId=a7,pX=O,pY=P,wpX=V,wpY=W})local a2,a3,a4,a5;while not(GetMapType()==MAPTYPE_ZONE and GetMapContentType()~=MAP_CONTENT_DUNGEON)do if MapZoomOut()~=SET_MAP_RESULT_MAP_CHANGED then break end;a2,a3,a4,a5=a1()table.insert(ab,{mapId=GetMapTileTexture(),pX=a2,pY=a3,wpX=a4,wpY=a5})end;local ac=GetCurrentMapIndex()or i;local ad=GetCurrentMapZoneIndex()if q(i)==SET_MAP_RESULT_FAILED then x(g,"Could not switch to world map")return end;a2,a3,a4,a5=a1()local ae,af,ag,ah;for R,ai in ipairs(ab)do if k[ai.mapId]then break end;x(h,"Store map measurement for",ai.mapId:sub(10,-7))ae=(a4-a2)/(ai.wpX-ai.pX)af=(a5-a3)/(ai.wpY-ai.pY)ag=a2-ai.pX*ae;ah=a3-ai.pY*af;if math.abs(ae-af)>1e-3 then x(f,"Current map measurement might be wrong",ai.mapId:sub(10,-7),ac,ai.pX,ai.pY,ai.wpX,ai.wpY,a2,a3,a4,a5,ag,ah,ae,af)end;k[ai.mapId]={scaleX=ae,scaleY=af,offsetX=ag,offsetY=ah,mapIndex=ac,zoneIndex=ad}end;return ac,Q end;local function aj(ak)q(ak)local al=GetMapTileTexture()if not a6(al)then local ac=aa(al,I())if ac~=ak then local am=GetMapInfo(ak)am=zo_strformat("<<C:1>>",am)x(f,"CalculateMeasurements returned different index while measuring ",am," map. expected:",ak,"actual:",ac)if not a6(al)then x(f,"Failed to measure ",am," map.")return end end end;return k[al]end;local function an()b.panAndZoom=ZO_WorldMap_GetPanAndZoom()b.mapPinManager=ZO_WorldMap_GetPinManager()if _G[d]then return end;ZO_WorldMap_AddCustomPin(d,function(ao)end,nil,{level=0,size=0,texture=""})ZO_WorldMap_SetCustomPinEnabled(_G[d],false)end;local function ap(aq)local ar=_G[aq]u[aq]=ar;local function as(...)local at=ar(...)if at~=SET_MAP_RESULT_MAP_FAILED and not a6()then x(h,aq)b:CalculateMapMeasurements(false)ar(...)at=SET_MAP_RESULT_MAP_CHANGED end;return at end;_G[aq]=as end;local function au()r=SetMapToPlayerLocation;u["SetMapToPlayerLocation"]=r;local function av(...)if not DoesUnitExist("player")then return SET_MAP_RESULT_MAP_FAILED end;local at=r(...)if at~=SET_MAP_RESULT_MAP_FAILED and not a6()then x(h,"SetMapToPlayerLocation")b:CalculateMapMeasurements(false)r(...)at=SET_MAP_RESULT_MAP_CHANGED end;return at end;SetMapToPlayerLocation=av end;local function aw()q=SetMapToMapListIndex;u["SetMapToMapListIndex"]=q;local function ax(ac)local at=q(ac)if at~=SET_MAP_RESULT_MAP_FAILED and not a6()then x(h,"SetMapToMapListIndex")b:CalculateMapMeasurements(false)q(ac)at=SET_MAP_RESULT_MAP_CHANGED end;return at end;SetMapToMapListIndex=ax end;local function ay()t=ProcessMapClick;u["ProcessMapClick"]=t;local function az(...)local at=t(...)if at~=SET_MAP_RESULT_MAP_FAILED and not a6()then x(h,"ProcessMapClick")b:CalculateMapMeasurements(true)end;return at end;ProcessMapClick=az end;local function aA()s=SetMapFloor;u["SetMapFloor"]=s;local function aB(...)local at=s(...)if at~=SET_MAP_RESULT_MAP_FAILED and not a6()then x(h,"SetMapFloor")b:CalculateMapMeasurements(true)s(...)end;return at end;SetMapFloor=aB end;local function aC()EVENT_MANAGER:UnregisterForEvent("LibGPS2_SaveWaypoint",EVENT_PLAYER_DEACTIVATED)EVENT_MANAGER:UnregisterForEvent("LibGPS2_RestoreWaypoint",EVENT_PLAYER_ACTIVATED)EVENT_MANAGER:UnregisterForEvent(a.."_Init",EVENT_PLAYER_ACTIVATED)EVENT_MANAGER:UnregisterForEvent(a.."_UnmuteMapPing",EVENT_MAP_PING)if b.Unload then b:Unload()if b.suppressCount>0 then if b.debugMode then zo_callLater(function()x(f,"There is a measure in progress before loading is completed.")end,2000)end;B()end end;function b:Unload()for aq,aD in pairs(u)do _G[aq]=aD end;c:UnregisterCallback("AfterPingAdded",C)c:UnregisterCallback("AfterPingRemoved",C)j,k,l=nil,nil,nil end;an()ap("SetMapToQuestCondition")ap("SetMapToQuestStepEnding")ap("SetMapToQuestZone")ap("SetMapToAutoMapNavigationTargetPosition")au()aw()ay()aA()a8()local function aE(aF)local ac=GetMapIndexByZoneId(aF)if ac then j[ac]=false end end;aE(347)aE(980)aE(1027)c:RegisterCallback("AfterPingAdded",C)c:RegisterCallback("AfterPingRemoved",C)end;function b:IsReady()return DoesUnitExist("player")end;function b:IsMeasuring()return v end;function b:ClearMapMeasurements()ZO_ClearTable(k)end;function b:ClearCurrentMapMeasurements()local a7=GetMapTileTexture()k[a7]=nil end;function b:GetCurrentMapMeasurements()local a7=GetMapTileTexture()if not k[a7]then b:CalculateMapMeasurements()end;return k[a7]end;function b:GetCurrentMapParentZoneIndices()local aG=b:GetCurrentMapMeasurements()local ac=aG.mapIndex;if not aG.zoneIndex then b:PushCurrentMap()SetMapToMapListIndex(ac)aG.zoneIndex=GetCurrentMapZoneIndex()b:PopCurrentMap()end;local ad=aG.zoneIndex;return ac,ad end;function b:CalculateMapMeasurements(aH)if GetMapType()==MAPTYPE_COSMIC then return false,SET_MAP_RESULT_CURRENT_MAP_UNCHANGED end;local a7=GetMapTileTexture()if k[a7]or a7==""then return false end;if b.debugMode then x("Called from",A(),"for",a7)end;local O,P=I()if O==0 and P==0 then return false,SET_MAP_RESULT_CURRENT_MAP_UNCHANGED end;aH=aH~=false;v=true;CALLBACK_MANAGER:FireCallbacks(b.LIB_EVENT_STATE_CHANGED,v)if aH then b:PushCurrentMap()end;local ac,Q=aa(a7,O,P)if Q then L()else RemovePlayerWaypoint()end;if aH then local at=b:PopCurrentMap()return true,at end;return true,a7==GetMapTileTexture()and SET_MAP_RESULT_CURRENT_MAP_UNCHANGED or SET_MAP_RESULT_MAP_CHANGED end;function b:LocalToGlobal(F,G)local aG=b:GetCurrentMapMeasurements()if aG then F=F*aG.scaleX+aG.offsetX;G=G*aG.scaleY+aG.offsetY;return F,G,aG.mapIndex end end;function b:GlobalToLocal(F,G)local aG=b:GetCurrentMapMeasurements()if aG then F=(F-aG.offsetX)/aG.scaleX;G=(G-aG.offsetY)/aG.scaleY;return F,G end end;function b:ZoneToGlobal(ac,F,G)b:GetCurrentMapMeasurements()SetMapToMapListIndex(ac)F,G,ac=b:LocalToGlobal(F,G)return F,G,ac end;function b:PanToMapPosition(F,G)if not self.mapPinManager then return end;local aI=self.mapPinManager;local aJ=aI:CreatePin(_G[d],"libgpsdummy",F,G)self.panAndZoom:PanToPin(aJ)aI:RemovePins(d)end;local function aK()return true end;local function aL()return SET_MAP_RESULT_MAP_CHANGED end;local aM={FireCallbacks=function()end}function b:SetPlayerChoseCurrentMap()local aN=ZO_WorldMap_IsMapChangingAllowed;ZO_WorldMap_IsMapChangingAllowed=aK;local aO=SetMapToMapListIndex;SetMapToMapListIndex=aL;local aP=CALLBACK_MANAGER;CALLBACK_MANAGER=aM;ZO_WorldMap_SetMapByIndex()ZO_WorldMap_IsMapChangingAllowed=aN;SetMapToMapListIndex=aO;CALLBACK_MANAGER=aP end;function b:SetMapToRootMap(F,G)local at=SET_MAP_RESULT_FAILED;for aQ,aG in pairs(j)do if not aG then aG=aj(aQ)j[aQ]=aG;at=SET_MAP_RESULT_MAP_CHANGED end;if aG then if F>aG.offsetX and F<aG.offsetX+aG.scaleX and G>aG.offsetY and G<aG.offsetY+aG.scaleY then if q(aQ)~=SET_MAP_RESULT_FAILED then return SET_MAP_RESULT_MAP_CHANGED end end end end;return at end;function b:MapZoomInMax(F,G)local at=b:SetMapToRootMap(F,G)if at~=SET_MAP_RESULT_FAILED then local O,P=b:GlobalToLocal(F,G)while WouldProcessMapClick(O,P)do at=t(O,P)if at==SET_MAP_RESULT_FAILED then break end;O,P=b:GlobalToLocal(F,G)end end;return at end;local function aR(aS)return b.panAndZoom:SetCurrentNormalizedZoom(aS)end;local function aT()return b.panAndZoom:GetCurrentNormalizedZoom()end;local function aU()local aV,aW=ZO_WorldMapContainer:GetCenter()local aX,aY=ZO_WorldMapScroll:GetCenter()return aV-aX,aW-aY end;function b:PushCurrentMap()local aZ,a_,b0,b1,b2,aS,ag,ah;b2=GetCurrentMapIndex()aZ=DoesCurrentMapMatchMapForPlayerLocation()a_=GetMapTileTexture()b0,b1=GetMapFloorInfo()aS=aT()ag,ah=aU()l[#l+1]={aZ,a_,b0,b1,b2,aS,ag,ah}end;function b:PopCurrentMap()local at=SET_MAP_RESULT_FAILED;local b3=table.remove(l,#l)if not b3 then x(h,"PopCurrentMap failed. No data on map stack.")return at end;local aZ,a_,b0,b1,b2,aS,ag,ah=unpack(b3)local b4=GetMapTileTexture()if b4~=a_ then if aZ then at=r()elseif b2~=nil and b2>0 then at=q(b2)else local b5=k[a_]if not b5 then x(h,string.format("No measurement for \"%s\". Returning to player location.",a_))return r()end;if b5.mapIndex==i then at=q(i)if at==SET_MAP_RESULT_FAILED then return at end;local F=b5.offsetX+b5.scaleX/2;local G=b5.offsetY+b5.scaleY/2;if not WouldProcessMapClick(F,G)then x(h,string.format("Cannot process click at %s/%s on map \"%s\" in order to get to \"%s\". Returning to player location instead.",tostring(F),tostring(G),GetMapTileTexture(),a_))return r()end;at=t(F,G)if at==SET_MAP_RESULT_FAILED then return at end else at=q(b5.mapIndex)if at==SET_MAP_RESULT_FAILED then return at end end;b4=GetMapTileTexture()if b4~=a_ then local F=b5.offsetX+b5.scaleX/2;local G=b5.offsetY+b5.scaleY/2;local b6=k[b4]if not b6 then x(h,string.format("No measurement for \"%s\". Returning to player location.",b4))return r()end;F=(F-b6.offsetX)/b6.scaleX;G=(G-b6.offsetY)/b6.scaleY;if not WouldProcessMapClick(F,G)then x(h,string.format("Cannot process click at %s/%s on map \"%s\" in order to get to \"%s\". Returning to player location instead.",tostring(F),tostring(G),GetMapTileTexture(),a_))return r()end;at=t(F,G)if at==SET_MAP_RESULT_FAILED then return at end end;if b1>0 then at=s(b0)end;if at~=SET_MAP_RESULT_FAILED then aR(aS)b.panAndZoom:SetCurrentOffset(ag,ah)end end else at=SET_MAP_RESULT_CURRENT_MAP_UNCHANGED end;return at end;aC()local function b7()local b8=4;local b9=GetAPIVersion()LibGPS_Data=LibGPS_Data or{apiVersion=b9,version=b8}if#b.mapMeasurements>0 then x(h,"Measurements before loading")end;if LibGPS_Data.apiVersion~=b9 or LibGPS_Data.version~=b8 then LibGPS_Data.apiVersion=b9;LibGPS_Data.version=b8 elseif LibGPS_Data.measurements then ZO_ShallowTableCopy(LibGPS_Data.measurements,b.mapMeasurements)end;LibGPS_Data.measurements=b.mapMeasurements;x(h,"Saved Variables loaded")end;local function ba(bb,bc)if bc~=a then return end;EVENT_MANAGER:UnregisterForEvent(a,bb)b7()SetMapToPlayerLocation()end;EVENT_MANAGER:UnregisterForEvent(a,EVENT_ADD_ON_LOADED)EVENT_MANAGER:RegisterForEvent(a,EVENT_ADD_ON_LOADED,ba)LibGPS2=b