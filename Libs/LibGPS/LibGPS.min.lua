local a="LibGPS2"local b=LibStub:NewLibrary(a,17)if not b then return end;local c=LibStub("LibMapPing",true)if not c then error(string.format("[%s] Cannot load without LibMapPing",a))end;local d=a.."DummyPin"local e=a.."_Finalize"b.LIB_EVENT_STATE_CHANGED="OnLibGPS2MeasurementChanged"local f="Warning"local g="Notice"local h="Debug"local i=0.085;local j=0.915;local k=1;local l=b.rootMaps or{}b.rootMaps=l;b.mapMeasurements=b.mapMeasurements or{}local m=b.mapMeasurements;b.mapStack=b.mapStack or{}local n=b.mapStack;b.suppressCount=b.suppressCount or 0;local MAP_PIN_TYPE_PLAYER_WAYPOINT=MAP_PIN_TYPE_PLAYER_WAYPOINT;local o,p,q=0,0,nil;local r=false;local s=nil;local t=nil;local u=nil;local v=nil;local w={}local x=false;SLASH_COMMANDS["/libgpsdebug"]=function(y)b.debugMode=tonumber(y)==1;df("[%s] debug mode %s",a,b.debugMode and"enabled"or"disabled")end;local function z(A,B,...)if not b.debugMode then return end;df("[%s] %s: %s",a,A,zo_strjoin(" ",B,...))end;local function C()local D;local function E()D='a'+1 end;local function F(G)D=string.match(G,"'GetAddon'.+user:/AddOns/(.-:.-):")end;xpcall(E,F)return D end;local function H()EVENT_MANAGER:UnregisterForUpdate(e)while b.suppressCount>0 do c:UnsuppressPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)b.suppressCount=b.suppressCount-1 end;if r then z(h,"Update waypoint pin",c:GetMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT))c:RefreshMapPin(MAP_PIN_TYPE_PLAYER_WAYPOINT)r=false end;x=false;CALLBACK_MANAGER:FireCallbacks(b.LIB_EVENT_STATE_CHANGED,x)end;local function I(J,K,L,M,N)if not N or J~=MAP_PIN_TYPE_PLAYER_WAYPOINT or not x then return end;EVENT_MANAGER:UnregisterForUpdate(e)EVENT_MANAGER:RegisterForUpdate(e,0,H)end;local function O()return GetMapPlayerPosition("player")end;local function P()return c:GetMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)end;local function Q(L,M)b.suppressCount=b.suppressCount+1;c:SuppressPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)c:SetMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT,MAP_TYPE_LOCATION_CENTERED,L,M)end;local function R(L,M)c:SetMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT,MAP_TYPE_LOCATION_CENTERED,L,M)end;local function S()c:RemoveMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)end;local function T()local U,V=O()local W,X=P()return U,V,W,X end;local function Y(Z)return m[Z or GetMapTileTexture()]~=nil end;local function _()if s(k)~=SET_MAP_RESULT_FAILED then local a0={scaleX=1,scaleY=1,offsetX=0,offsetY=0,mapIndex=k,zoneIndex=GetCurrentMapZoneIndex()}m[GetMapTileTexture()]=a0;l[k]=a0;return true end;return false end;local function a1(Z,a2,a3)local a4,a5=i,i;if a2<0.5 then a4=j end;if a3<0.5 then a5=j end;Q(a4,a5)local a6={}table.insert(a6,{mapId=Z,pX=a2,pY=a3,wpX=a4,wpY=a5})local U,V,W,X;while not(GetMapType()==MAPTYPE_ZONE and GetMapContentType()~=MAP_CONTENT_DUNGEON)do if MapZoomOut()~=SET_MAP_RESULT_MAP_CHANGED then break end;U,V,W,X=T()table.insert(a6,{mapId=GetMapTileTexture(),pX=U,pY=V,wpX=W,wpY=X})end;local a7=GetCurrentMapIndex()or k;local a8=GetCurrentMapZoneIndex()if s(k)==SET_MAP_RESULT_FAILED then z(g,"Could not switch to world map")return end;U,V,W,X=T()local a9,aa,ab,ac;for ad,ae in ipairs(a6)do if m[ae.mapId]then break end;z(h,"Store map measurement for",ae.mapId:sub(10,-7))a9=(W-U)/(ae.wpX-ae.pX)aa=(X-V)/(ae.wpY-ae.pY)ab=U-ae.pX*a9;ac=V-ae.pY*aa;if math.abs(a9-aa)>1e-3 then z(f,"Current map measurement might be wrong",ae.mapId:sub(10,-7),a7,ae.pX,ae.pY,ae.wpX,ae.wpY,U,V,W,X,ab,ac,a9,aa)end;m[ae.mapId]={scaleX=a9,scaleY=aa,offsetX=ab,offsetY=ac,mapIndex=a7,zoneIndex=a8}end;return a7 end;local function af()o,p=P()q=GetMapTileTexture()end;local function ag()o,p=0,0,nil end;local function ah(ai)s(ai)local aj=GetMapTileTexture()if not Y(aj)then local a7=a1(aj,O())if a7~=ai then local ak=GetMapInfo(ai)ak=zo_strformat("<<C:1>>",ak)z(f,"CalculateMeasurements returned different index while measuring ",ak," map. expected:",ai,"actual:",a7)if not Y(aj)then z(f,"Failed to measure ",ak," map.")return end end end;return m[aj]end;local function al()if not q then z(h,"Called RestoreCurrentWaypoint without calling StoreCurrentWaypoint.")return end;local am=false;if o~=0 or p~=0 then local an=m[q]local L=o*an.scaleX+an.offsetX;local M=p*an.scaleY+an.offsetY;for ao,an in pairs(l)do if not an then an=ah(ao)l[ao]=an end;if an then if L>an.offsetX and L<an.offsetX+an.scaleX and M>an.offsetY and M<an.offsetY+an.scaleY then if s(ao)~=SET_MAP_RESULT_FAILED then L=(L-an.offsetX)/an.scaleX;M=(M-an.offsetY)/an.scaleY;R(L,M)am=true;break end end end end;if not am then z(h,"Cannot reset waypoint because it was outside of our reach")end end;if am then z(h,"Waypoint was restored, request pin update")r=true else S()end;ag()end;local function ap()b.panAndZoom=ZO_WorldMap_GetPanAndZoom()b.mapPinManager=ZO_WorldMap_GetPinManager()if _G[d]then return end;ZO_WorldMap_AddCustomPin(d,function(aq)end,nil,{level=0,size=0,texture=""})ZO_WorldMap_SetCustomPinEnabled(_G[d],false)end;local function ar(as)local at=_G[as]w[as]=at;local function au(...)local av=at(...)if av~=SET_MAP_RESULT_MAP_FAILED and not Y()then z(h,as)local aw,ax=b:CalculateMapMeasurements(false)if ax~=SET_MAP_RESULT_CURRENT_MAP_UNCHANGED then av=ax end;at(...)end;return av end;_G[as]=au end;local function ay()t=SetMapToPlayerLocation;w["SetMapToPlayerLocation"]=t;local function az(...)if not DoesUnitExist("player")then return SET_MAP_RESULT_MAP_FAILED end;local av=t(...)if av~=SET_MAP_RESULT_MAP_FAILED and not Y()then z(h,"SetMapToPlayerLocation")local aw,ax=b:CalculateMapMeasurements(false)if ax~=SET_MAP_RESULT_CURRENT_MAP_UNCHANGED then av=ax end;t(...)end;return av end;SetMapToPlayerLocation=az end;local function aA()s=SetMapToMapListIndex;w["SetMapToMapListIndex"]=s;local function aB(a7)local av=s(a7)if av~=SET_MAP_RESULT_MAP_FAILED and not Y()then z(h,"SetMapToMapListIndex")local aw,ax=b:CalculateMapMeasurements(false)if ax~=SET_MAP_RESULT_CURRENT_MAP_UNCHANGED then av=ax end;s(a7)end;return av end;SetMapToMapListIndex=aB end;local function aC()v=ProcessMapClick;w["ProcessMapClick"]=v;local function aD(...)local av=v(...)if av~=SET_MAP_RESULT_MAP_FAILED and not Y()then z(h,"ProcessMapClick")local aw,ax=b:CalculateMapMeasurements(true)if ax~=SET_MAP_RESULT_CURRENT_MAP_UNCHANGED then av=ax end end;return av end;ProcessMapClick=aD end;local function aE()u=SetMapFloor;w["SetMapFloor"]=u;local function aF(...)local av=u(...)if av~=SET_MAP_RESULT_MAP_FAILED and not Y()then z(h,"SetMapFloor")local aw,ax=b:CalculateMapMeasurements(true)if ax~=SET_MAP_RESULT_CURRENT_MAP_UNCHANGED then av=ax end;u(...)end;return av end;SetMapFloor=aF end;local function aG()EVENT_MANAGER:UnregisterForEvent("LibGPS2_SaveWaypoint",EVENT_PLAYER_DEACTIVATED)EVENT_MANAGER:UnregisterForEvent("LibGPS2_RestoreWaypoint",EVENT_PLAYER_ACTIVATED)EVENT_MANAGER:UnregisterForEvent(a.."_Init",EVENT_PLAYER_ACTIVATED)EVENT_MANAGER:UnregisterForEvent(a.."_UnmuteMapPing",EVENT_MAP_PING)if b.Unload then b:Unload()if b.suppressCount>0 then if b.debugMode then zo_callLater(function()z(f,"There is a measure in progress before loading is completed.")end,2000)end;H()end end;function b:Unload()for as,aH in pairs(w)do _G[as]=aH end;c:UnregisterCallback("AfterPingAdded",I)c:UnregisterCallback("AfterPingRemoved",I)l,m,n=nil,nil,nil end;ap()ar("SetMapToQuestCondition")ar("SetMapToQuestStepEnding")ar("SetMapToQuestZone")ay()aA()aC()aE()_()local function aI(aJ)local a7=GetMapIndexByZoneId(aJ)if a7 then l[a7]=false end end;aI(347)aI(980)aI(1027)SetMapToPlayerLocation()c:RegisterCallback("AfterPingAdded",I)c:RegisterCallback("AfterPingRemoved",I)end;function b:IsReady()return DoesUnitExist("player")end;function b:IsMeasuring()return x end;function b:ClearMapMeasurements()m={}end;function b:ClearCurrentMapMeasurements()local Z=GetMapTileTexture()m[Z]=nil end;function b:GetCurrentMapMeasurements()local Z=GetMapTileTexture()if not m[Z]then b:CalculateMapMeasurements()end;return m[Z]end;function b:GetCurrentMapParentZoneIndices()local an=b:GetCurrentMapMeasurements()local a7=an.mapIndex;if not an.zoneIndex then b:PushCurrentMap()SetMapToMapListIndex(a7)an.zoneIndex=GetCurrentMapZoneIndex()b:PopCurrentMap()end;local a8=an.zoneIndex;return a7,a8 end;function b:CalculateMapMeasurements(aK)if GetMapType()==MAPTYPE_COSMIC then return false,SET_MAP_RESULT_CURRENT_MAP_UNCHANGED end;local Z=GetMapTileTexture()if m[Z]or Z==""then return false end;if b.debugMode then z("Called from",C(),"for",Z)end;local a2,a3=O()if a2==0 and a3==0 then return false,SET_MAP_RESULT_CURRENT_MAP_UNCHANGED end;aK=aK~=false;x=true;CALLBACK_MANAGER:FireCallbacks(b.LIB_EVENT_STATE_CHANGED,x)if aK then b:PushCurrentMap()end;local aL=c:HasMapPing(MAP_PIN_TYPE_PLAYER_WAYPOINT)if aL then af()end;local a7=a1(Z,a2,a3)if aL then al()else S()end;if aK then local av=b:PopCurrentMap()return true,av end;return true,Z==GetMapTileTexture()and SET_MAP_RESULT_CURRENT_MAP_UNCHANGED or SET_MAP_RESULT_MAP_CHANGED end;function b:LocalToGlobal(L,M)local an=b:GetCurrentMapMeasurements()if an then L=L*an.scaleX+an.offsetX;M=M*an.scaleY+an.offsetY;return L,M,an.mapIndex end end;function b:GlobalToLocal(L,M)local an=b:GetCurrentMapMeasurements()if an then L=(L-an.offsetX)/an.scaleX;M=(M-an.offsetY)/an.scaleY;return L,M end end;function b:ZoneToGlobal(a7,L,M)b:GetCurrentMapMeasurements()SetMapToMapListIndex(a7)L,M,a7=b:LocalToGlobal(L,M)return L,M,a7 end;function b:PanToMapPosition(L,M)if not self.mapPinManager then return end;local aM=self.mapPinManager;local aN=aM:CreatePin(_G[d],"libgpsdummy",L,M)self.panAndZoom:PanToPin(aN)aM:RemovePins(d)end;local function aO()return true end;local function aP()return SET_MAP_RESULT_MAP_CHANGED end;local aQ={FireCallbacks=function()end}function b:SetPlayerChoseCurrentMap()local aR=ZO_WorldMap_IsMapChangingAllowed;ZO_WorldMap_IsMapChangingAllowed=aO;local aS=SetMapToMapListIndex;SetMapToMapListIndex=aP;local aT=CALLBACK_MANAGER;CALLBACK_MANAGER=aQ;ZO_WorldMap_SetMapByIndex()ZO_WorldMap_IsMapChangingAllowed=aR;SetMapToMapListIndex=aS;CALLBACK_MANAGER=aT end;function b:SetMapToRootMap(L,M)local av=SET_MAP_RESULT_FAILED;for ao,an in pairs(l)do if not an then an=ah(ao)l[ao]=an;av=SET_MAP_RESULT_MAP_CHANGED end;if an then if L>an.offsetX and L<an.offsetX+an.scaleX and M>an.offsetY and M<an.offsetY+an.scaleY then if s(ao)~=SET_MAP_RESULT_FAILED then return SET_MAP_RESULT_MAP_CHANGED end end end end;return av end;function b:MapZoomInMax(L,M)local av=b:SetMapToRootMap(L,M)if av~=SET_MAP_RESULT_FAILED then local a2,a3=b:GlobalToLocal(L,M)while WouldProcessMapClick(a2,a3)do av=v(a2,a3)if av==SET_MAP_RESULT_FAILED then break end;a2,a3=b:GlobalToLocal(L,M)end end;return av end;local aU,aV;if GetAPIVersion()>=100025 then function aU(aW)return b.panAndZoom:SetCurrentNormalizedZoom(aW)end;function aV()return b.panAndZoom:GetCurrentNormalizedZoom()end else function aV()return b.panAndZoom:GetCurrentZoom()end;function aU(aW)return b.panAndZoom:SetCurrentZoom(aW)end end;local function aX()local aY,aZ=ZO_WorldMapContainer:GetCenter()local a_,b0=ZO_WorldMapScroll:GetCenter()return aY-a_,aZ-b0 end;function b:PushCurrentMap()local b1,b2,b3,b4,b5,aW,ab,ac;b5=GetCurrentMapIndex()b1=DoesCurrentMapMatchMapForPlayerLocation()b2=GetMapTileTexture()b3,b4=GetMapFloorInfo()aW=aV()ab,ac=aX()n[#n+1]={b1,b2,b3,b4,b5,aW,ab,ac}end;function b:PopCurrentMap()local av=SET_MAP_RESULT_FAILED;local b6=table.remove(n,#n)if not b6 then z(h,"PopCurrentMap failed. No data on map stack.")return av end;local b1,b2,b3,b4,b5,aW,ab,ac=unpack(b6)local b7=GetMapTileTexture()if b7~=b2 then if b1 then av=t()elseif b5~=nil and b5>0 then av=s(b5)else local b8=m[b2]if not b8 then z(h,string.format("No measurement for \"%s\". Returning to player location.",b2))return t()end;if b8.mapIndex==k then av=s(k)if av==SET_MAP_RESULT_FAILED then return av end;local L=b8.offsetX+b8.scaleX/2;local M=b8.offsetY+b8.scaleY/2;if not WouldProcessMapClick(L,M)then z(h,string.format("Cannot process click at %s/%s on map \"%s\" in order to get to \"%s\". Returning to player location instead.",tostring(L),tostring(M),GetMapTileTexture(),b2))return t()end;av=v(L,M)if av==SET_MAP_RESULT_FAILED then return av end else av=s(b8.mapIndex)if av==SET_MAP_RESULT_FAILED then return av end end;b7=GetMapTileTexture()if b7~=b2 then local L=b8.offsetX+b8.scaleX/2;local M=b8.offsetY+b8.scaleY/2;local b9=m[b7]if not b9 then z(h,string.format("No measurement for \"%s\". Returning to player location.",b7))return t()end;L=(L-b9.offsetX)/b9.scaleX;M=(M-b9.offsetY)/b9.scaleY;if not WouldProcessMapClick(L,M)then z(h,string.format("Cannot process click at %s/%s on map \"%s\" in order to get to \"%s\". Returning to player location instead.",tostring(L),tostring(M),GetMapTileTexture(),b2))return t()end;av=v(L,M)if av==SET_MAP_RESULT_FAILED then return av end end;if b4>0 then av=u(b3)end;if av~=SET_MAP_RESULT_FAILED then aU(aW)b.panAndZoom:SetCurrentOffset(ab,ac)end end else av=SET_MAP_RESULT_CURRENT_MAP_UNCHANGED end;return av end;aG()LibGPS2=b